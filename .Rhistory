plot(ws_graph)
dim <- 2
size <- 5
nei <- 5
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(ws_graph)
dim <- 1
size <- 5
nei <- 2
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(ws_graph)
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
dim <- 1
size <- 5
nei <- 2
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 5
nei <- 2
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 2
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 10
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 100
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 30
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 10
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 1000
nei <- 10
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 40
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 5
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 60
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 40
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
dim <- 1
size <- 100
nei <- 55
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 55
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 50
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 45
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 49
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 47
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 100
nei <- 50
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
plot(ws_graph)
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 500
nei <- 20
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
cc <- c()
sp <- c()
dim <- 1
size <- 500
nei <- 5
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 500
nei <- 20
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 500
nei <- 25
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 500
nei <- 60
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 500
nei <- 25
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 500
nei <- 35
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 2500
nei <- 35
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
ps <- c(0, 0.0001, 0.001, 0.01, 0.1, 1)
ps <- c(ps, ps[1]/2, ps[2]/2, ps[3]/2, ps[4]/2, ps[5]/2,
ps[1]/3, ps[2]/3, ps[3]/3, ps[4]/3, ps[5]/3)
cc <- c()
sp <- c()
dim <- 1
size <- 2500
nei <- 50
for (p in ps) {
ws_graph <- watts.strogatz.game(dim, size, nei, p)
cc <- c(cc, transitivity(ws_graph))
sp <- c(sp, average.path.length(ws_graph))
}
plot(x = ps, y = sp/sp[1], col='red', log='x')
points(x = c(ps), y = cc/cc[1])
apply(matches, 2, sd)
library(caret)
library(rgl)
library(car)
library(MASS)
library(e1071)
library(SDMTools)
install.packages('SDMTools')
# Using full data from matches
setwd("~/Documents/Uni/4o/APA/APA-Practica")
predict_from_model <- function(model, test) {
p <- predict(model, test)
a <- as.numeric(p) - 1
b <- as.numeric(test$winner) - 1
cm <- table(test$winner,p)
N.test <- nrow(test)
MSE <- sum((a-b)^2/ N.test)
model.accuracy <- sum(diag(cm))/sum(cm)
print(model.accuracy)
print(MSE)
}
set.seed(123)
matches <- read.csv('20k_matches.csv', header = TRUE, sep = ',')
matches$winner = as.factor(matches$winner)
dataf <- as.data.frame(matches)
colSums(is.na(matches))
N <- nrow(matches)
apply(matches, 2, sd)
apply(matches, 2, function(x) x/sd(x))
apply(matches$t0_cs_min_0_10, 2, function(x) x/sd(x))
matches$t0_cs_min_0_10 = matches$t0_cs_min_0_10/sd(matches$t0_cs_min_0_10)
View(matches)
View(matches)
View(matches)
View(matches)
matches <- read.csv('20k_matches.csv', header = TRUE, sep = ',')
matches$winner = as.factor(matches$winner)
dataf <- as.data.frame(matches)
colSums(is.na(matches))
N <- nrow(matches)
apply(matches, 2, sd)
apply(matches, 1, sd)
apply(matches, 1, function(x) x/sd)
apply(matches[-1], 1, function(x) x/sd)
matches$t0_cs_min_0_10 = matches$t0_cs_min_0_10/sd(matches$t0_cs_min_0_10)
matches$t0_cs_min_10_20 = matches$t0_cs_min_10_20/sd(matches$t0_cs_min_10_20)
matches$t0_xp_min_0_10 = matches$t0_xp_min_0_10/sd(matches$t0_xp_min_0_10)
matches$t0_xp_min_10_20 = matches$t0_xp_min_10_20/sd(matches$t0_xp_min_10_20)
matches$t0_gold_min_0_10 = matches$t0_gold_min_0_10/sd(matches$t0_gold_min_0_10)
matches$t0_gold_min_10_20 = matches$t0_gold_min_10_20/sd(matches$t0_gold_min_10_20)
matches$t0_cs_diff_min_0_10 = matches$t0_cs_diff_min_0_10/sd(matches$t0_cs_diff_min_0_10)
matches$t0_cs_diff_min_10_20 = matches$t0_cs_diff_min_10_20/sd(matches$t0_cs_diff_min_10_20)
matches$t0_xp_diff_min_0_10 = matches$t0_xp_diff_min_0_10/sd(matches$t0_xp_diff_min_0_10)
matches$t0_xp_diff_min_10_20 = matches$t0_xp_diff_min_10_20/sd(matches$t0_xp_diff_min_10_20)
matches$t0_dmg_taken_min_0_10 = matches$t0_dmg_taken_min_0_10/sd(matches$t0_dmg_taken_min_0_10)
matches$t0_dmg_taken_min_10_20 = matches$t0_dmg_taken_min_10_20/sd(matches$t0_dmg_taken_min_10_20)
matches$t0_dmg_taken_diff_0_10 = matches$t0_dmg_taken_diff_0_10/sd(matches$t0_dmg_taken_diff_0_10)
matches$t0_dmg_taken_diff_10_20 = matches$t0_dmg_taken_diff_10_20/sd(matches$t0_dmg_taken_diff_10_20)
matches$t0_c0_wr = matches$t0_c0_wr/sd(matches$t0_c0_wr)
matches$t0_c1_wr = matches$t0_c1_wr/sd(matches$t0_c1_wr)
matches$t0_c2_wr = matches$t0_c2_wr/sd(matches$t0_c2_wr)
matches$t0_c3_wr = matches$t0_c3_wr/sd(matches$t0_c3_wr)
matches$t0_c4_wr = matches$t0_c4_wr/sd(matches$t0_c4_wr)
## Equip 1
matches$t1_cs_min_0_10 = matches$t1_cs_min_0_10/sd(matches$t1_cs_min_0_10)
matches$t1_cs_min_10_20 = matches$t1_cs_min_10_20/sd(matches$t1_cs_min_10_20)
matches$t1_xp_min_0_10 = matches$t1_xp_min_0_10/sd(matches$t1_xp_min_0_10)
matches$t1_xp_min_10_20 = matches$t1_xp_min_10_20/sd(matches$t1_xp_min_10_20)
matches$t1_gold_min_0_10 = matches$t1_gold_min_0_10/sd(matches$t1_gold_min_0_10)
matches$t1_gold_min_10_20 = matches$t1_gold_min_10_20/sd(matches$t1_gold_min_10_20)
matches$t1_cs_diff_min_0_10 = matches$t1_cs_diff_min_0_10/sd(matches$t1_cs_diff_min_0_10)
matches$t1_cs_diff_min_10_20 = matches$t1_cs_diff_min_10_20/sd(matches$t1_cs_diff_min_10_20)
matches$t1_xp_diff_min_0_10 = matches$t1_xp_diff_min_0_10/sd(matches$t1_xp_diff_min_0_10)
matches$t1_xp_diff_min_10_20 = matches$t1_xp_diff_min_10_20/sd(matches$t1_xp_diff_min_10_20)
matches$t1_dmg_taken_min_0_10 = matches$t1_dmg_taken_min_0_10/sd(matches$t1_dmg_taken_min_0_10)
matches$t1_dmg_taken_min_10_20 = matches$t1_dmg_taken_min_10_20/sd(matches$t1_dmg_taken_min_10_20)
matches$t1_dmg_taken_diff_0_10 = matches$t1_dmg_taken_diff_0_10/sd(matches$t1_dmg_taken_diff_0_10)
matches$t1_dmg_taken_diff_10_20 = matches$t1_dmg_taken_diff_10_20/sd(matches$t1_dmg_taken_diff_10_20)
matches$t1_c0_wr = matches$t1_c0_wr/sd(matches$t1_c0_wr)
matches$t1_c1_wr = matches$t1_c1_wr/sd(matches$t1_c1_wr)
matches$t1_c2_wr = matches$t1_c2_wr/sd(matches$t1_c2_wr)
matches$t1_c3_wr = matches$t1_c3_wr/sd(matches$t1_c3_wr)
matches$t1_c4_wr = matches$t1_c4_wr/sd(matches$t1_c4_wr)
smp_size <- floor(0.75 * N)
smp_size <- floor(0.75 * N)
train_ind <- sample(seq_len(N), size = smp_size)
train <- matches[train_ind, ]
test <- matches[-train_ind, ]
decays <- 10^seq(-3,0,by=0.1)
trc <- trainControl (method="cv", number=3)
nnet.5 <- train (winner ~., data = train, linout=FALSE, method='nnet', maxit = 500, trace = FALSE,tuneGrid = expand.grid(.size=5,.decay=decays), trControl=trc)
predict_from_model(nnet.5, test)
# 20 neurones
nnet.20 <- train (winner ~., data = train, linout=FALSE, method='nnet', maxit = 500, trace = FALSE,tuneGrid = expand.grid(.size=20,.decay=0.1), trControl=trc)
# 10 neurones
nnet.10 <- train (winner ~., data = train, linout=FALSE, method='nnet', maxit = 500, trace = FALSE,tuneGrid = expand.grid(.size=10,.decay=0.1), trControl=trc)
predict_from_model(nnet.20, test)
predict_from_model(nnet.10, test)
nnet.20$results
save(nnet.20, file = "nnet/nnet.20.regul")
save(nnet.10, file = "nnet/nnet.10.regul")
save(nnet.20, file = "nnet/nnet.20.regul")
save(nnet.5, file = "nnet/nnet.5.regul")
# 10 neurones
nnet.10 <- train (winner ~., data = train, linout=FALSE, method='nnet', maxit = 500, trace = FALSE,tuneGrid = expand.grid(.size=10,.decay=decays), trControl=trc)
# 20 neurones
nnet.20 <- train (winner ~., data = train, linout=FALSE, method='nnet', maxit = 500, trace = FALSE,tuneGrid = expand.grid(.size=20,.decay=decays), trControl=trc)
save(nnet.20, file = "nnet/nnet.20.regul")
matches$t1_c2_wr = matches$t1_c2_wr/sd(matches$t1_c2_wr)
save(nnet.10, file = "nnet/nnet.10.regul")
save(nnet.5, file = "nnet/nnet.5.regul")
predict_from_model(nnet.20, test)
predict_from_model(nnet.10, test)
predict_from_model(nnet.5, test)
